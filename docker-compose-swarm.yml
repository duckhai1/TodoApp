version: '3.1'

services:
  # Database
  docker_db: 
    image: mysql:8.0
    ports:
      - 3306:3306
    networks:
      - my_network
    volumes:
      - $PWD/mount/mysql:/var/lib/mysql
      # - todo_db:/var/lib/mysql
    environment:
      - MYSQL_ROOT_PASSWORD=rootpassword
      - MYSQL_USER=user
      - MYSQL_PASSWORD=password
      - MYSQL_DATABASE=my_db
    deploy:
      replicas: 2
      update_config:
        parallelism: 2
        delay: 10s
      restart_policy:
        condition: on-failure
      placement:
        constraints: [node.role == manager]
  # Backend
  api_server:
    build:
      context: dockerBackend
      dockerfile: Dockerfile
    image: duckhai1/api_server:latest
    ports: 
      - 8080:8080
    networks:
      - my_network
    environment:
      - MYSQL_HOST=docker_db
    depends_on:
      - docker_db
    deploy:
      replicas: 2
      update_config:
        parallelism: 2
        delay: 10s
      restart_policy:
        condition: on-failure
        delay: 10s
        max_attempts: 3
  # Frontend
  todo_app:
    build:
      args:
        - APP_ENV=development
      context: dockerFrontendAngular
      dockerfile: Dockerfile
    image: duckhai1/todo_app:latest
    ports: 
      - 4200:80
    networks:
      - my_network
    depends_on:
      - api_server
    deploy:
      replicas: 2
      update_config:
        parallelism: 2
        delay: 10s
      restart_policy:
        condition: on-failure
        delay: 10s
        max_attempts: 3
  visualizer:
    image: dockersamples/visualizer
    ports: 
      - 8888:8080
    networks:
      - my_network
    deploy:
      placement:
        constraints: [node.role == manager]
networks:
    my_network:
        driver: overlay

volumes:
  todo_db:
  visualizer_db: